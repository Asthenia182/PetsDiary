<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:PetsDiary.Presentation.Controls">


    <Style x:Key="RadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Foreground" Value="{StaticResource Independence}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="{StaticResource NotoSans-Regular}"/>       
    </Style>
    
    <Style x:Key="DatePickerStyle" TargetType="DatePicker">
        <Setter Property="BorderBrush" Value="{StaticResource GreenSheen}"/>
        <Setter Property="Foreground" Value="{StaticResource Independence}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="{StaticResource NotoSans-Regular}"/>
    </Style>

    <Style x:Key="MediumLabelStyle" TargetType="Label">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="{StaticResource NotoSans-Bold}"/>
        <Setter Property="Foreground" Value="{StaticResource Independence}"/>
    </Style>

    <Style x:Key="MediumTextBlockStyle" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="{StaticResource NotoSans-Bold}"/>
        <Setter Property="Foreground" Value="{StaticResource Independence}"/>
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
    </Style>

    <Style x:Key="SmallLabelStyle" TargetType="Label">
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontFamily" Value="{StaticResource NotoSans-Bold}"/>
        <Setter Property="Foreground" Value="{StaticResource Independence}"/>        
    </Style>
    
    <Style x:Key="FormLabelStyle" TargetType="Label">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="{StaticResource NotoSans-Bold}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Foreground" Value="{StaticResource Independence}"/>
        <Setter Property="Margin" Value="20,10"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>

    <Style x:Key="FormTextBoxStyle" TargetType="TextBox">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="{StaticResource BloggerSans-Regular}"/>
        <Setter Property="Foreground" Value="{StaticResource Independence}"/>
        <Setter Property="BorderBrush" Value="{StaticResource GreenSheen}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="4,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{TemplateBinding Background}"    
                            x:Name="Bd" BorderBrush="{StaticResource GreenSheen}"   
                            BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">
                     <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="White" TargetName="Bd"/>
                            <Setter Property="Foreground" Value="{StaticResource Independence}"/>
                            <Setter TargetName="Bd" Property="BorderThickness" Value="0"></Setter>
                        </Trigger>
                        <Trigger Property="Width" Value="Auto">
                            <Setter Property="MinWidth" Value="100"/>
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="25"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource RussianGreen}"></Setter>
                            <Setter TargetName="Bd" Property="BorderThickness" Value="3"></Setter>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Independence}"></Setter>
                            <Setter TargetName="Bd" Property="BorderThickness" Value="2"></Setter>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel>
                        <AdornedElementPlaceholder x:Name="textBox" />
                        <ItemsControl ItemsSource="{Binding}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding ErrorContent}" Foreground="Red" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="FilledButtonStyle"
           TargetType="Button">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="{StaticResource NotoSans-Regular}"/>
        <Setter Property="Padding" Value="20,5,20,5"/>
        <Setter Property="Margin" Value="5,10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5" x:Name="Bd" Background="{StaticResource GreenSheen}"  BorderThickness="0" >
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="LightGray" TargetName="Bd"/>
                            <Setter Property="Foreground" Value="DarkGray"/>
                            <Setter TargetName="Bd" Property="BorderThickness" Value="0"></Setter>
                        </Trigger>
                        <Trigger Property="Width" Value="Auto">
                            <Setter Property="MinWidth" Value="100"/>
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="25"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0"
                                  Color="{StaticResource IndependenceColor}"
                                  Opacity="1"
                                  BlurRadius="5"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource RussianGreen}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EmptyButtonStyle"
           TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource GreenSheen}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="{StaticResource NotoSans-Regular}"/>
        <Setter Property="Padding" Value="20,5,20,5"/>
        <Setter Property="Margin" Value="5,10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Bd" CornerRadius="5" Background="Transparent" BorderBrush="{StaticResource GreenSheen}" BorderThickness="1" >
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="LightGray" TargetName="Bd"/>
                            <Setter Property="Foreground" Value="DarkGray"/>
                            <Setter TargetName="Bd" Property="BorderThickness" Value="0"></Setter>
                        </Trigger>
                        <Trigger Property="Width" Value="Auto">
                            <Setter Property="MinWidth" Value="100"/>
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="25"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="BorderThickness" Value="2"/>

                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource GreenSheen}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IconButtonStyle"
           TargetType="Button">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>        
    </Style>

    <Style x:Key="IconButtonTemplate" TargetType="{x:Type controls:IconButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:IconButton}">
                    <StackPanel Orientation="Horizontal">
                        <Viewbox Stretch="Fill"
                         Height="{TemplateBinding IconHeight}"
                         Width="{TemplateBinding IconWidth}">
                            <Path x:Name="icon" Fill="{StaticResource Independence}"
                           Data="{TemplateBinding IconSource}">
                            </Path>
                        </Viewbox>
                        <TextBlock x:Name="txt" Text="{TemplateBinding Text}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Margin="5,0,0,0"
                           Foreground="{StaticResource Independence}"
                           FontFamily="{StaticResource BloggerSans-Regular}" />
                    </StackPanel>
                                  
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="icon" Property="Fill" Value="#B33d405b"/>
                            <Setter TargetName="txt" Property="Foreground" Value="#B33d405b"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="icon" Property="Fill" Value="#AA808080"/>
                            <Setter TargetName="txt" Property="Foreground" Value="#AA808080"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="icon" Property="Fill" Value="#80808080"/>
                            <Setter TargetName="txt" Property="Foreground" Value="#80808080"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="DarkPathStyle" TargetType="Path">
        <Setter Property="Fill" Value="{StaticResource Independence}"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect ShadowDepth="0"
                                  Color="{StaticResource IndependenceColor}"
                                  Opacity="1"
                                  BlurRadius="5"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" Value="{StaticResource LightIndependence}"/>
            </Trigger>
        </Style.Triggers>

    </Style>
    
    <Style x:Key="NavRadioButtonStyle"
        BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="RadioButton">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="{StaticResource NotoSans-Regular}"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Padding" Value="12,0,12,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" Background="{TemplateBinding Background}"  CornerRadius="0" BorderThickness="0" >
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource CambridgeBlue}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{StaticResource Independence}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource GreenSheen}"/>
                            <Setter Property="Foreground" Value="{StaticResource RussianGreen}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>